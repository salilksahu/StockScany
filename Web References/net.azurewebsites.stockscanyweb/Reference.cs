//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace StockScany.net.azurewebsites.stockscanyweb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SSWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class SSWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoggedUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWelcomeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllScansOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScanStocksDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWLDeltaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecuritiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTranOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMailInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSetWLOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShareLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNSEOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunCalcsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunAllScansOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckNSEDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinalizeDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSetScanInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOTPOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SSWebService() {
            this.Url = "http://stockscanyweb.azurewebsites.net/SSWebService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event LoggedUpdateCompletedEventHandler LoggedUpdateCompleted;
        
        /// <remarks/>
        public event GetGeneralInfoCompletedEventHandler GetGeneralInfoCompleted;
        
        /// <remarks/>
        public event GetWelcomeInfoCompletedEventHandler GetWelcomeInfoCompleted;
        
        /// <remarks/>
        public event GetAllScansCompletedEventHandler GetAllScansCompleted;
        
        /// <remarks/>
        public event GetScanStocksDataCompletedEventHandler GetScanStocksDataCompleted;
        
        /// <remarks/>
        public event GetWLDeltaCompletedEventHandler GetWLDeltaCompleted;
        
        /// <remarks/>
        public event GetSecuritiesCompletedEventHandler GetSecuritiesCompleted;
        
        /// <remarks/>
        public event CheckEmailCompletedEventHandler CheckEmailCompleted;
        
        /// <remarks/>
        public event UpdatePhoneCompletedEventHandler UpdatePhoneCompleted;
        
        /// <remarks/>
        public event RegisterClientCompletedEventHandler RegisterClientCompleted;
        
        /// <remarks/>
        public event InsertTranCompletedEventHandler InsertTranCompleted;
        
        /// <remarks/>
        public event GetPaymentInfoCompletedEventHandler GetPaymentInfoCompleted;
        
        /// <remarks/>
        public event GetMailInfoCompletedEventHandler GetMailInfoCompleted;
        
        /// <remarks/>
        public event GetTransactionsCompletedEventHandler GetTransactionsCompleted;
        
        /// <remarks/>
        public event GetSetWLCompletedEventHandler GetSetWLCompleted;
        
        /// <remarks/>
        public event SubmitFeedbackCompletedEventHandler SubmitFeedbackCompleted;
        
        /// <remarks/>
        public event GetShareLinkCompletedEventHandler GetShareLinkCompleted;
        
        /// <remarks/>
        public event InsertNSECompletedEventHandler InsertNSECompleted;
        
        /// <remarks/>
        public event RunCalcsCompletedEventHandler RunCalcsCompleted;
        
        /// <remarks/>
        public event RunAllScansCompletedEventHandler RunAllScansCompleted;
        
        /// <remarks/>
        public event CheckNSEDataCompletedEventHandler CheckNSEDataCompleted;
        
        /// <remarks/>
        public event FinalizeDataCompletedEventHandler FinalizeDataCompleted;
        
        /// <remarks/>
        public event GetSetScanInfoCompletedEventHandler GetSetScanInfoCompleted;
        
        /// <remarks/>
        public event DeleteAllDataCompletedEventHandler DeleteAllDataCompleted;
        
        /// <remarks/>
        public event SendOTPCompletedEventHandler SendOTPCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoggedUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LoggedUpdate(string sUniqueId, int iAccountId, System.DateTime dUpdateDate) {
            this.Invoke("LoggedUpdate", new object[] {
                        sUniqueId,
                        iAccountId,
                        dUpdateDate});
        }
        
        /// <remarks/>
        public void LoggedUpdateAsync(string sUniqueId, int iAccountId, System.DateTime dUpdateDate) {
            this.LoggedUpdateAsync(sUniqueId, iAccountId, dUpdateDate, null);
        }
        
        /// <remarks/>
        public void LoggedUpdateAsync(string sUniqueId, int iAccountId, System.DateTime dUpdateDate, object userState) {
            if ((this.LoggedUpdateOperationCompleted == null)) {
                this.LoggedUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoggedUpdateOperationCompleted);
            }
            this.InvokeAsync("LoggedUpdate", new object[] {
                        sUniqueId,
                        iAccountId,
                        dUpdateDate}, this.LoggedUpdateOperationCompleted, userState);
        }
        
        private void OnLoggedUpdateOperationCompleted(object arg) {
            if ((this.LoggedUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoggedUpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGeneralInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGeneralInfo(string sUniqueId, int iAccountId) {
            object[] results = this.Invoke("GetGeneralInfo", new object[] {
                        sUniqueId,
                        iAccountId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralInfoAsync(string sUniqueId, int iAccountId) {
            this.GetGeneralInfoAsync(sUniqueId, iAccountId, null);
        }
        
        /// <remarks/>
        public void GetGeneralInfoAsync(string sUniqueId, int iAccountId, object userState) {
            if ((this.GetGeneralInfoOperationCompleted == null)) {
                this.GetGeneralInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralInfoOperationCompleted);
            }
            this.InvokeAsync("GetGeneralInfo", new object[] {
                        sUniqueId,
                        iAccountId}, this.GetGeneralInfoOperationCompleted, userState);
        }
        
        private void OnGetGeneralInfoOperationCompleted(object arg) {
            if ((this.GetGeneralInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralInfoCompleted(this, new GetGeneralInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWelcomeInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWelcomeInfo(string sUniqueId, int iAccountId) {
            object[] results = this.Invoke("GetWelcomeInfo", new object[] {
                        sUniqueId,
                        iAccountId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWelcomeInfoAsync(string sUniqueId, int iAccountId) {
            this.GetWelcomeInfoAsync(sUniqueId, iAccountId, null);
        }
        
        /// <remarks/>
        public void GetWelcomeInfoAsync(string sUniqueId, int iAccountId, object userState) {
            if ((this.GetWelcomeInfoOperationCompleted == null)) {
                this.GetWelcomeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWelcomeInfoOperationCompleted);
            }
            this.InvokeAsync("GetWelcomeInfo", new object[] {
                        sUniqueId,
                        iAccountId}, this.GetWelcomeInfoOperationCompleted, userState);
        }
        
        private void OnGetWelcomeInfoOperationCompleted(object arg) {
            if ((this.GetWelcomeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWelcomeInfoCompleted(this, new GetWelcomeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllScans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllScans(string sUniqueId, int iAccountId, int isSubActive) {
            object[] results = this.Invoke("GetAllScans", new object[] {
                        sUniqueId,
                        iAccountId,
                        isSubActive});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllScansAsync(string sUniqueId, int iAccountId, int isSubActive) {
            this.GetAllScansAsync(sUniqueId, iAccountId, isSubActive, null);
        }
        
        /// <remarks/>
        public void GetAllScansAsync(string sUniqueId, int iAccountId, int isSubActive, object userState) {
            if ((this.GetAllScansOperationCompleted == null)) {
                this.GetAllScansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllScansOperationCompleted);
            }
            this.InvokeAsync("GetAllScans", new object[] {
                        sUniqueId,
                        iAccountId,
                        isSubActive}, this.GetAllScansOperationCompleted, userState);
        }
        
        private void OnGetAllScansOperationCompleted(object arg) {
            if ((this.GetAllScansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllScansCompleted(this, new GetAllScansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScanStocksData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetScanStocksData(string sUniqueId, int iAccountId, int iSecId) {
            object[] results = this.Invoke("GetScanStocksData", new object[] {
                        sUniqueId,
                        iAccountId,
                        iSecId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetScanStocksDataAsync(string sUniqueId, int iAccountId, int iSecId) {
            this.GetScanStocksDataAsync(sUniqueId, iAccountId, iSecId, null);
        }
        
        /// <remarks/>
        public void GetScanStocksDataAsync(string sUniqueId, int iAccountId, int iSecId, object userState) {
            if ((this.GetScanStocksDataOperationCompleted == null)) {
                this.GetScanStocksDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScanStocksDataOperationCompleted);
            }
            this.InvokeAsync("GetScanStocksData", new object[] {
                        sUniqueId,
                        iAccountId,
                        iSecId}, this.GetScanStocksDataOperationCompleted, userState);
        }
        
        private void OnGetScanStocksDataOperationCompleted(object arg) {
            if ((this.GetScanStocksDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScanStocksDataCompleted(this, new GetScanStocksDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWLDelta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetWLDelta(string sUniqueId, int iAccountId, string sSecIds, string sDBStateIds) {
            object[] results = this.Invoke("GetWLDelta", new object[] {
                        sUniqueId,
                        iAccountId,
                        sSecIds,
                        sDBStateIds});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetWLDeltaAsync(string sUniqueId, int iAccountId, string sSecIds, string sDBStateIds) {
            this.GetWLDeltaAsync(sUniqueId, iAccountId, sSecIds, sDBStateIds, null);
        }
        
        /// <remarks/>
        public void GetWLDeltaAsync(string sUniqueId, int iAccountId, string sSecIds, string sDBStateIds, object userState) {
            if ((this.GetWLDeltaOperationCompleted == null)) {
                this.GetWLDeltaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWLDeltaOperationCompleted);
            }
            this.InvokeAsync("GetWLDelta", new object[] {
                        sUniqueId,
                        iAccountId,
                        sSecIds,
                        sDBStateIds}, this.GetWLDeltaOperationCompleted, userState);
        }
        
        private void OnGetWLDeltaOperationCompleted(object arg) {
            if ((this.GetWLDeltaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWLDeltaCompleted(this, new GetWLDeltaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSecurities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSecurities(string sUniqueId, int iAccountId, int iSecurityState) {
            object[] results = this.Invoke("GetSecurities", new object[] {
                        sUniqueId,
                        iAccountId,
                        iSecurityState});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecuritiesAsync(string sUniqueId, int iAccountId, int iSecurityState) {
            this.GetSecuritiesAsync(sUniqueId, iAccountId, iSecurityState, null);
        }
        
        /// <remarks/>
        public void GetSecuritiesAsync(string sUniqueId, int iAccountId, int iSecurityState, object userState) {
            if ((this.GetSecuritiesOperationCompleted == null)) {
                this.GetSecuritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecuritiesOperationCompleted);
            }
            this.InvokeAsync("GetSecurities", new object[] {
                        sUniqueId,
                        iAccountId,
                        iSecurityState}, this.GetSecuritiesOperationCompleted, userState);
        }
        
        private void OnGetSecuritiesOperationCompleted(object arg) {
            if ((this.GetSecuritiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecuritiesCompleted(this, new GetSecuritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckEmail(string sUniqueId, int iAccountId, string sEmail) {
            object[] results = this.Invoke("CheckEmail", new object[] {
                        sUniqueId,
                        iAccountId,
                        sEmail});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmailAsync(string sUniqueId, int iAccountId, string sEmail) {
            this.CheckEmailAsync(sUniqueId, iAccountId, sEmail, null);
        }
        
        /// <remarks/>
        public void CheckEmailAsync(string sUniqueId, int iAccountId, string sEmail, object userState) {
            if ((this.CheckEmailOperationCompleted == null)) {
                this.CheckEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmailOperationCompleted);
            }
            this.InvokeAsync("CheckEmail", new object[] {
                        sUniqueId,
                        iAccountId,
                        sEmail}, this.CheckEmailOperationCompleted, userState);
        }
        
        private void OnCheckEmailOperationCompleted(object arg) {
            if ((this.CheckEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmailCompleted(this, new CheckEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePhone(string sUniqueId, int iAccountId, string sPhone) {
            object[] results = this.Invoke("UpdatePhone", new object[] {
                        sUniqueId,
                        iAccountId,
                        sPhone});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePhoneAsync(string sUniqueId, int iAccountId, string sPhone) {
            this.UpdatePhoneAsync(sUniqueId, iAccountId, sPhone, null);
        }
        
        /// <remarks/>
        public void UpdatePhoneAsync(string sUniqueId, int iAccountId, string sPhone, object userState) {
            if ((this.UpdatePhoneOperationCompleted == null)) {
                this.UpdatePhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePhoneOperationCompleted);
            }
            this.InvokeAsync("UpdatePhone", new object[] {
                        sUniqueId,
                        iAccountId,
                        sPhone}, this.UpdatePhoneOperationCompleted, userState);
        }
        
        private void OnUpdatePhoneOperationCompleted(object arg) {
            if ((this.UpdatePhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePhoneCompleted(this, new UpdatePhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable RegisterClient(string sUniqueId, int iAccountId, string sEmail, string sName, string sNewOld) {
            object[] results = this.Invoke("RegisterClient", new object[] {
                        sUniqueId,
                        iAccountId,
                        sEmail,
                        sName,
                        sNewOld});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterClientAsync(string sUniqueId, int iAccountId, string sEmail, string sName, string sNewOld) {
            this.RegisterClientAsync(sUniqueId, iAccountId, sEmail, sName, sNewOld, null);
        }
        
        /// <remarks/>
        public void RegisterClientAsync(string sUniqueId, int iAccountId, string sEmail, string sName, string sNewOld, object userState) {
            if ((this.RegisterClientOperationCompleted == null)) {
                this.RegisterClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterClientOperationCompleted);
            }
            this.InvokeAsync("RegisterClient", new object[] {
                        sUniqueId,
                        iAccountId,
                        sEmail,
                        sName,
                        sNewOld}, this.RegisterClientOperationCompleted, userState);
        }
        
        private void OnRegisterClientOperationCompleted(object arg) {
            if ((this.RegisterClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterClientCompleted(this, new RegisterClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTran", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertTran(string sUniqueId, int iAccountId, System.DateTime dtTransDate, string sOrderId, string sRefId, string sStatus, int fAmount, string sMsg) {
            object[] results = this.Invoke("InsertTran", new object[] {
                        sUniqueId,
                        iAccountId,
                        dtTransDate,
                        sOrderId,
                        sRefId,
                        sStatus,
                        fAmount,
                        sMsg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTranAsync(string sUniqueId, int iAccountId, System.DateTime dtTransDate, string sOrderId, string sRefId, string sStatus, int fAmount, string sMsg) {
            this.InsertTranAsync(sUniqueId, iAccountId, dtTransDate, sOrderId, sRefId, sStatus, fAmount, sMsg, null);
        }
        
        /// <remarks/>
        public void InsertTranAsync(string sUniqueId, int iAccountId, System.DateTime dtTransDate, string sOrderId, string sRefId, string sStatus, int fAmount, string sMsg, object userState) {
            if ((this.InsertTranOperationCompleted == null)) {
                this.InsertTranOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTranOperationCompleted);
            }
            this.InvokeAsync("InsertTran", new object[] {
                        sUniqueId,
                        iAccountId,
                        dtTransDate,
                        sOrderId,
                        sRefId,
                        sStatus,
                        fAmount,
                        sMsg}, this.InsertTranOperationCompleted, userState);
        }
        
        private void OnInsertTranOperationCompleted(object arg) {
            if ((this.InsertTranCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTranCompleted(this, new InsertTranCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPaymentInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPaymentInfo(string sUniqueId, int iAccountId) {
            object[] results = this.Invoke("GetPaymentInfo", new object[] {
                        sUniqueId,
                        iAccountId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentInfoAsync(string sUniqueId, int iAccountId) {
            this.GetPaymentInfoAsync(sUniqueId, iAccountId, null);
        }
        
        /// <remarks/>
        public void GetPaymentInfoAsync(string sUniqueId, int iAccountId, object userState) {
            if ((this.GetPaymentInfoOperationCompleted == null)) {
                this.GetPaymentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentInfoOperationCompleted);
            }
            this.InvokeAsync("GetPaymentInfo", new object[] {
                        sUniqueId,
                        iAccountId}, this.GetPaymentInfoOperationCompleted, userState);
        }
        
        private void OnGetPaymentInfoOperationCompleted(object arg) {
            if ((this.GetPaymentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentInfoCompleted(this, new GetPaymentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMailInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMailInfo(string sUniqueId, int iAccountId) {
            object[] results = this.Invoke("GetMailInfo", new object[] {
                        sUniqueId,
                        iAccountId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMailInfoAsync(string sUniqueId, int iAccountId) {
            this.GetMailInfoAsync(sUniqueId, iAccountId, null);
        }
        
        /// <remarks/>
        public void GetMailInfoAsync(string sUniqueId, int iAccountId, object userState) {
            if ((this.GetMailInfoOperationCompleted == null)) {
                this.GetMailInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMailInfoOperationCompleted);
            }
            this.InvokeAsync("GetMailInfo", new object[] {
                        sUniqueId,
                        iAccountId}, this.GetMailInfoOperationCompleted, userState);
        }
        
        private void OnGetMailInfoOperationCompleted(object arg) {
            if ((this.GetMailInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMailInfoCompleted(this, new GetMailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTransactions(string sUniqueId, int iAccountId) {
            object[] results = this.Invoke("GetTransactions", new object[] {
                        sUniqueId,
                        iAccountId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsAsync(string sUniqueId, int iAccountId) {
            this.GetTransactionsAsync(sUniqueId, iAccountId, null);
        }
        
        /// <remarks/>
        public void GetTransactionsAsync(string sUniqueId, int iAccountId, object userState) {
            if ((this.GetTransactionsOperationCompleted == null)) {
                this.GetTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetTransactions", new object[] {
                        sUniqueId,
                        iAccountId}, this.GetTransactionsOperationCompleted, userState);
        }
        
        private void OnGetTransactionsOperationCompleted(object arg) {
            if ((this.GetTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsCompleted(this, new GetTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSetWL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSetWL(string sUniqueId, int iAccountId, int iFlag, string sSecIds, string sStateIds) {
            object[] results = this.Invoke("GetSetWL", new object[] {
                        sUniqueId,
                        iAccountId,
                        iFlag,
                        sSecIds,
                        sStateIds});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSetWLAsync(string sUniqueId, int iAccountId, int iFlag, string sSecIds, string sStateIds) {
            this.GetSetWLAsync(sUniqueId, iAccountId, iFlag, sSecIds, sStateIds, null);
        }
        
        /// <remarks/>
        public void GetSetWLAsync(string sUniqueId, int iAccountId, int iFlag, string sSecIds, string sStateIds, object userState) {
            if ((this.GetSetWLOperationCompleted == null)) {
                this.GetSetWLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSetWLOperationCompleted);
            }
            this.InvokeAsync("GetSetWL", new object[] {
                        sUniqueId,
                        iAccountId,
                        iFlag,
                        sSecIds,
                        sStateIds}, this.GetSetWLOperationCompleted, userState);
        }
        
        private void OnGetSetWLOperationCompleted(object arg) {
            if ((this.GetSetWLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSetWLCompleted(this, new GetSetWLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitFeedback", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SubmitFeedback(string sUniqueId, int iAccountId, string sType, string sName, string sEmail, string sFeedback) {
            object[] results = this.Invoke("SubmitFeedback", new object[] {
                        sUniqueId,
                        iAccountId,
                        sType,
                        sName,
                        sEmail,
                        sFeedback});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitFeedbackAsync(string sUniqueId, int iAccountId, string sType, string sName, string sEmail, string sFeedback) {
            this.SubmitFeedbackAsync(sUniqueId, iAccountId, sType, sName, sEmail, sFeedback, null);
        }
        
        /// <remarks/>
        public void SubmitFeedbackAsync(string sUniqueId, int iAccountId, string sType, string sName, string sEmail, string sFeedback, object userState) {
            if ((this.SubmitFeedbackOperationCompleted == null)) {
                this.SubmitFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitFeedbackOperationCompleted);
            }
            this.InvokeAsync("SubmitFeedback", new object[] {
                        sUniqueId,
                        iAccountId,
                        sType,
                        sName,
                        sEmail,
                        sFeedback}, this.SubmitFeedbackOperationCompleted, userState);
        }
        
        private void OnSubmitFeedbackOperationCompleted(object arg) {
            if ((this.SubmitFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitFeedbackCompleted(this, new SubmitFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetShareLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetShareLink(string sUniqueId, int iAccountId) {
            object[] results = this.Invoke("GetShareLink", new object[] {
                        sUniqueId,
                        iAccountId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetShareLinkAsync(string sUniqueId, int iAccountId) {
            this.GetShareLinkAsync(sUniqueId, iAccountId, null);
        }
        
        /// <remarks/>
        public void GetShareLinkAsync(string sUniqueId, int iAccountId, object userState) {
            if ((this.GetShareLinkOperationCompleted == null)) {
                this.GetShareLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShareLinkOperationCompleted);
            }
            this.InvokeAsync("GetShareLink", new object[] {
                        sUniqueId,
                        iAccountId}, this.GetShareLinkOperationCompleted, userState);
        }
        
        private void OnGetShareLinkOperationCompleted(object arg) {
            if ((this.GetShareLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShareLinkCompleted(this, new GetShareLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNSE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertNSE(string symbol, string series, decimal open, decimal high, decimal low, decimal close, decimal last, decimal prev_close, decimal tottrdqty, decimal tottrdval, System.DateTime s_timestamp, decimal totaltrades) {
            this.Invoke("InsertNSE", new object[] {
                        symbol,
                        series,
                        open,
                        high,
                        low,
                        close,
                        last,
                        prev_close,
                        tottrdqty,
                        tottrdval,
                        s_timestamp,
                        totaltrades});
        }
        
        /// <remarks/>
        public void InsertNSEAsync(string symbol, string series, decimal open, decimal high, decimal low, decimal close, decimal last, decimal prev_close, decimal tottrdqty, decimal tottrdval, System.DateTime s_timestamp, decimal totaltrades) {
            this.InsertNSEAsync(symbol, series, open, high, low, close, last, prev_close, tottrdqty, tottrdval, s_timestamp, totaltrades, null);
        }
        
        /// <remarks/>
        public void InsertNSEAsync(string symbol, string series, decimal open, decimal high, decimal low, decimal close, decimal last, decimal prev_close, decimal tottrdqty, decimal tottrdval, System.DateTime s_timestamp, decimal totaltrades, object userState) {
            if ((this.InsertNSEOperationCompleted == null)) {
                this.InsertNSEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNSEOperationCompleted);
            }
            this.InvokeAsync("InsertNSE", new object[] {
                        symbol,
                        series,
                        open,
                        high,
                        low,
                        close,
                        last,
                        prev_close,
                        tottrdqty,
                        tottrdval,
                        s_timestamp,
                        totaltrades}, this.InsertNSEOperationCompleted, userState);
        }
        
        private void OnInsertNSEOperationCompleted(object arg) {
            if ((this.InsertNSECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNSECompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RunCalcs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RunCalcs() {
            this.Invoke("RunCalcs", new object[0]);
        }
        
        /// <remarks/>
        public void RunCalcsAsync() {
            this.RunCalcsAsync(null);
        }
        
        /// <remarks/>
        public void RunCalcsAsync(object userState) {
            if ((this.RunCalcsOperationCompleted == null)) {
                this.RunCalcsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunCalcsOperationCompleted);
            }
            this.InvokeAsync("RunCalcs", new object[0], this.RunCalcsOperationCompleted, userState);
        }
        
        private void OnRunCalcsOperationCompleted(object arg) {
            if ((this.RunCalcsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunCalcsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RunAllScans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RunAllScans() {
            this.Invoke("RunAllScans", new object[0]);
        }
        
        /// <remarks/>
        public void RunAllScansAsync() {
            this.RunAllScansAsync(null);
        }
        
        /// <remarks/>
        public void RunAllScansAsync(object userState) {
            if ((this.RunAllScansOperationCompleted == null)) {
                this.RunAllScansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunAllScansOperationCompleted);
            }
            this.InvokeAsync("RunAllScans", new object[0], this.RunAllScansOperationCompleted, userState);
        }
        
        private void OnRunAllScansOperationCompleted(object arg) {
            if ((this.RunAllScansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunAllScansCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckNSEData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CheckNSEData() {
            object[] results = this.Invoke("CheckNSEData", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CheckNSEDataAsync() {
            this.CheckNSEDataAsync(null);
        }
        
        /// <remarks/>
        public void CheckNSEDataAsync(object userState) {
            if ((this.CheckNSEDataOperationCompleted == null)) {
                this.CheckNSEDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckNSEDataOperationCompleted);
            }
            this.InvokeAsync("CheckNSEData", new object[0], this.CheckNSEDataOperationCompleted, userState);
        }
        
        private void OnCheckNSEDataOperationCompleted(object arg) {
            if ((this.CheckNSEDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckNSEDataCompleted(this, new CheckNSEDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinalizeData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FinalizeData(string indice, decimal price, decimal change, decimal per_change, int flag) {
            this.Invoke("FinalizeData", new object[] {
                        indice,
                        price,
                        change,
                        per_change,
                        flag});
        }
        
        /// <remarks/>
        public void FinalizeDataAsync(string indice, decimal price, decimal change, decimal per_change, int flag) {
            this.FinalizeDataAsync(indice, price, change, per_change, flag, null);
        }
        
        /// <remarks/>
        public void FinalizeDataAsync(string indice, decimal price, decimal change, decimal per_change, int flag, object userState) {
            if ((this.FinalizeDataOperationCompleted == null)) {
                this.FinalizeDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinalizeDataOperationCompleted);
            }
            this.InvokeAsync("FinalizeData", new object[] {
                        indice,
                        price,
                        change,
                        per_change,
                        flag}, this.FinalizeDataOperationCompleted, userState);
        }
        
        private void OnFinalizeDataOperationCompleted(object arg) {
            if ((this.FinalizeDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinalizeDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSetScanInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetSetScanInfo(string scanid, string symbol, string series, int flag) {
            object[] results = this.Invoke("GetSetScanInfo", new object[] {
                        scanid,
                        symbol,
                        series,
                        flag});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetSetScanInfoAsync(string scanid, string symbol, string series, int flag) {
            this.GetSetScanInfoAsync(scanid, symbol, series, flag, null);
        }
        
        /// <remarks/>
        public void GetSetScanInfoAsync(string scanid, string symbol, string series, int flag, object userState) {
            if ((this.GetSetScanInfoOperationCompleted == null)) {
                this.GetSetScanInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSetScanInfoOperationCompleted);
            }
            this.InvokeAsync("GetSetScanInfo", new object[] {
                        scanid,
                        symbol,
                        series,
                        flag}, this.GetSetScanInfoOperationCompleted, userState);
        }
        
        private void OnGetSetScanInfoOperationCompleted(object arg) {
            if ((this.GetSetScanInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSetScanInfoCompleted(this, new GetSetScanInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAllData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAllData(string spass) {
            this.Invoke("DeleteAllData", new object[] {
                        spass});
        }
        
        /// <remarks/>
        public void DeleteAllDataAsync(string spass) {
            this.DeleteAllDataAsync(spass, null);
        }
        
        /// <remarks/>
        public void DeleteAllDataAsync(string spass, object userState) {
            if ((this.DeleteAllDataOperationCompleted == null)) {
                this.DeleteAllDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllDataOperationCompleted);
            }
            this.InvokeAsync("DeleteAllData", new object[] {
                        spass}, this.DeleteAllDataOperationCompleted, userState);
        }
        
        private void OnDeleteAllDataOperationCompleted(object arg) {
            if ((this.DeleteAllDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOTP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendOTP(string sCode, string sEmailId, string sPasscode) {
            object[] results = this.Invoke("SendOTP", new object[] {
                        sCode,
                        sEmailId,
                        sPasscode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendOTPAsync(string sCode, string sEmailId, string sPasscode) {
            this.SendOTPAsync(sCode, sEmailId, sPasscode, null);
        }
        
        /// <remarks/>
        public void SendOTPAsync(string sCode, string sEmailId, string sPasscode, object userState) {
            if ((this.SendOTPOperationCompleted == null)) {
                this.SendOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOTPOperationCompleted);
            }
            this.InvokeAsync("SendOTP", new object[] {
                        sCode,
                        sEmailId,
                        sPasscode}, this.SendOTPOperationCompleted, userState);
        }
        
        private void OnSendOTPOperationCompleted(object arg) {
            if ((this.SendOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOTPCompleted(this, new SendOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void LoggedUpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetGeneralInfoCompletedEventHandler(object sender, GetGeneralInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetWelcomeInfoCompletedEventHandler(object sender, GetWelcomeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWelcomeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWelcomeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAllScansCompletedEventHandler(object sender, GetAllScansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllScansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllScansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetScanStocksDataCompletedEventHandler(object sender, GetScanStocksDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScanStocksDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScanStocksDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetWLDeltaCompletedEventHandler(object sender, GetWLDeltaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWLDeltaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWLDeltaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSecuritiesCompletedEventHandler(object sender, GetSecuritiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecuritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecuritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckEmailCompletedEventHandler(object sender, CheckEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdatePhoneCompletedEventHandler(object sender, UpdatePhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RegisterClientCompletedEventHandler(object sender, RegisterClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertTranCompletedEventHandler(object sender, InsertTranCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTranCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTranCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetPaymentInfoCompletedEventHandler(object sender, GetPaymentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetMailInfoCompletedEventHandler(object sender, GetMailInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMailInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMailInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetTransactionsCompletedEventHandler(object sender, GetTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSetWLCompletedEventHandler(object sender, GetSetWLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSetWLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSetWLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SubmitFeedbackCompletedEventHandler(object sender, SubmitFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetShareLinkCompletedEventHandler(object sender, GetShareLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShareLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShareLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void InsertNSECompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RunCalcsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RunAllScansCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckNSEDataCompletedEventHandler(object sender, CheckNSEDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckNSEDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckNSEDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void FinalizeDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetSetScanInfoCompletedEventHandler(object sender, GetSetScanInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSetScanInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSetScanInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteAllDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SendOTPCompletedEventHandler(object sender, SendOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591